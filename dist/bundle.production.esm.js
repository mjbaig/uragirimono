const e=new class{constructor(){this.channels=new Map,console.log("t"),console.log("instance")}createWorker(){const e=`( () => {\n                ${"\n            self.onmessage = function (message) {\n                self.postMessage(message.data);\n            }\n        ".toString()}\n        })();`,s=new Blob([e],{type:"application/javascript"}),n=new Worker(window.URL.createObjectURL(s));return n.onmessage=e=>{if(e){const s=e.data,n=this.channels.get(s.channelName);if(void 0!==n){const e=n.subscribers;e&&e.map((function(e){e.update(s)}))}}},n}registerChannel(e){this.channels.get(e)||this.channels.set(e,{name:e,subscribers:[],worker:this.createWorker()})}destroyChannel(e){const s=this.channels.get(e);void 0!==s&&(s.worker.terminate(),this.channels.delete(e))}send(e){const s=e.channelName;if(s){const n=this.channels.get(s);if(void 0!==n){n.worker.postMessage(e)}}}registerSubscriber(e,s){const n=this.channels.get(e);void 0!==n&&n.subscribers.push(s)}};export{e as uragirimono};
